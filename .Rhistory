source("conn_rnooa_postgresql_writeOGR_locs_and_weatherData.R")
clear
source("conn_rnooa_postgresql_writeOGR_locs_and_weatherData.R")
source("conn_rnooa_postgresql_writeOGR_locs_and_weatherData.R")
source("conn_rnooa_postgresql_writeOGR_locs_and_weatherData.R")
q()
install.packages("delir")
install.packages("delir")
install.packages("deldir")
install.packages(c("sp", "rgdal", "rnoaa","lubridate","hash", "zoo", "DBI", "RPostgreSQL", "deldir", "gWidgetstcltk" ))
install.packages(c("sp", "rgdal", "dplyr"," tidyr","rnoaa","lubridate","hash", "zoo", "DBI", "RPostgreSQL" ))
install.packages(c("dplyr"," tidyr","rnoaa","lubridate", "zoo" ))
install.packages("rnoaa" )
install.packages("devtools")
install.packages("rversions")
install.packages(c("xml2","rversions"))
install.packages("xml2")
q()
q()
q()
set.seed(4321)
nMax <- 9000
mat1 <- matrix( c(rnorm(nMax,5), runif(nMax,110),abs(rcauchy(nMax,loc=5, sca=0.1))), nr=nMax/2, byrow=T)
mat1 <- matrix( c(rnorm(nMax,5), runif(nMax,1,10),abs(rcauchy(nMax,loc=5, sca=0.1))), nr=nMax/2, byrow=T)
head(mat1, n=3)
system.time({rowAv <- numberic(); for (i in 1:nrow(mat1)) rowAv <- c(rowAv, mean(mat1[i,]))})
system.time({rowAv <- as.numberic(); for (i in 1:nrow(mat1)) rowAv <- c(rowAv, mean(mat1[i,]))})
system.time({rowAv <- as.numeric(); for (i in 1:nrow(mat1)) rowAv <- c(rowAv, mean(mat1[i,]))})
system.time( rowAv2 <- rowMeans(mat1)
)
head(rowAv2)
head(rowAv2, col=3)
q()
q()
library(ws2pgdb)
library(devtools)
setwd("rabravo_v2/")
document()
install_github("rabravo/ws2pgdb")
q()
