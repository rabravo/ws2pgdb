% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ws2pgdb.R
\name{canopiVoronoi}
\alias{canopiVoronoi}
\title{canopiVoronoi() creates a table with the polygones of a Voronoi tessellation that intersect a State/County.}
\usage{
canopiVoronoi(tableName, geoid)
}
\arguments{
\item{tableName}{Table with geometric points used to generate Voronoi tessellation}

\item{geoid}{The geoid is needed to identify the boundaries of intersection,
where the generating points reside, that is in a State or a County.}
}
\value{
Function returns the name of the table containing the polygones forming the Voronoi
or the value 1 when fail to find weather station information.
}
\description{
The function takes the name of a existing table made of at least to columns: a column with geometric points
and a column with unique identifiers for each element row in the table. The function produces a table in a
Postgres database with geometries that form a Voronoi tessellation ( polygones ). The arguments needed for
the function are two: a table's name and geoid number.
}
\note{
The output table name has the following form: st_co_geoid_ws_sufix_type_v_poly.
"st" is the U.S. State name and  "co" is the U.S. County name. The "sufix" and "type" are
specified by the user in the all_coor_ws_2_pgdb function. The following function assumes
you have postgresql-9.3, postgis-2.1, and postgresql-9.3-plr extension installed. Enable
your database with both postgis and plr extensions with the following command in UBUNTU:
> sudo -u dbuser psql -c "CREATE EXTENSION postgis; CREATE EXTENSION plr;
where dbuser is the owner of the database. Moreover, in https://gist.github.com/djq/4714788
you will find the query code to be loaded into the database. The r_voronoi(text,text,text)
function is needed to create the Voronoi tessellation. canopiVoronoi() function exploits
this code for my study, but a small modification was required. The buffer_distance has been
increased from 10% to 50% so that the tessellation guarantees to cover the whole area under study.
When using the functions from this package to produce the table with the geometric points, as
shown in the example, you should not have problems reusing canopiVoronoi().
}
\examples{
ghcnd <- 'GHCND'
geoid <- '12087'
type  <- 'PRCP'
sufix <- 'example'
tableName <- all_coor_ws_2_pgdb( ghcnd, geoid, type, sufix )
canopiVoronoi( tableName, geoid )
}
\keyword{Postgres}
\keyword{RPostgreSQL,}
\keyword{Voronoi,}
\keyword{pl/r,}
\keyword{plr,}
\keyword{station,}
\keyword{tessellation,}
\keyword{weather}

